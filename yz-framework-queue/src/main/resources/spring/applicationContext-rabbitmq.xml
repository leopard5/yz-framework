<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.2.xsd
">

    <!-- Jackson2JsonMessageConverter -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter">
    </bean>

    <!-- virtual host /-->
    <rabbit:connection-factory id="connectionFactory" addresses="${rabbitmq.addresses}"
                               username="${rabbitmq.username}" password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtualHost}"/>

    <!--  rabbitmq-management plugin -->
    <rabbit:admin id="admin1" connection-factory="connectionFactory"/>

    <!--  Spring AMQP Rabbit Template -->
    <rabbit:template id="rabbitTemplate" exchange="testExchange" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter" channel-transacted="true"/>

    <!-- Exchange -->
    <rabbit:topic-exchange id="testExchange" name="testExchange" durable="true" auto-delete="false"
                           declared-by="admin1" >
        <rabbit:bindings>
            <rabbit:binding queue="test.result" pattern="test.result"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!-- message queue -->
    <rabbit:queue id="test.result" name="test.result" durable="true" auto-delete="false"
                  exclusive="false" declared-by="admin1">
        <rabbit:queue-arguments>
            <!-- Dead Letter Exchanges -->
            <entry key="x-dead-letter-exchange" value="retryExchange"/>
            <entry key="x-dead-letter-routing-key" value="error.result"/>
            <entry key="x-message-ttl" value="3999990000" value-type="java.lang.Long"/>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <!-- dead letter queue -->
    <rabbit:queue id="error.result" name="error.result" durable="true" auto-delete="false"
                  exclusive="false" declared-by="admin1" />

    <!-- retryExchange -->
    <rabbit:topic-exchange name="retryExchange" id="retryExchange" durable="true" auto-delete="false"
                           declared-by="admin1" >
        <rabbit:bindings>
            <rabbit:binding queue="error.result" pattern="error.result"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <rabbit:annotation-driven/>

    <!-- ListenerContainerFactory -->
    <bean id="rabbitListenerContainerFactory"
          class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageConverter" ref="jsonMessageConverter"/>
        <property name="concurrentConsumers" value="1"/>
        <property name="maxConcurrentConsumers" value="10"/>
        <!--<property name="transactionManager" value="transactionManager"/>-->
        <property name="channelTransacted" value="true"/>

        <property name="defaultRequeueRejected" value="false"/>

        <property name="adviceChain">
            <array>
                <ref bean="retryInterceptor"/>
            </array>
        </property>

    </bean>

    <!-- retryInterceptor -->
    <bean id="retryInterceptor" class="org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean">
        <property name="messageRecoverer" ref="messageRecoverer" />
        <property name="retryOperations" ref="retryTemplate" />
    </bean>

    <!-- messageRecoverer -->
    <bean id="messageRecoverer" class="org.springframework.amqp.rabbit.retry.RejectAndDontRequeueRecoverer" />

    <!--
    RetryPolicy
    1. org.springframework.retry.policy.SimpleRetryPolicy
    2. org.springframework.retry.policy.NeverRetryPolicy
    3. org.springframework.retry.policy.AlwaysRetryPolicy
    4. org.springframework.retry.policy.TimeoutRetryPolicy
    5. org.springframework.retry.policy.ExceptionClassifierRetryPolicy
    6. org.springframework.retry.policy.CompositeRetryPolicy

    BackOffPolicy
    StatelessBackoffPolicy 3
    1. org.springframework.retry.backoff.FixedBackOffPolicy
    2. org.springframework.retry.backoff.NoBackOffPolicy
    3. org.springframework.retry.backoff.UniformRandomBackOffPolicy

    SleepingbackOffPolicy 4
    1. org.springframework.retry.backoff.ExponentialBackOffPolicy
    2. org.springframework.retry.backoff.ExponentialRandomBackOffPolicy
    -->

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="1000" />
                <property name="maxInterval" value="10000" />
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="3" />
            </bean>
        </property>
    </bean>

</beans>